#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
config:
  version-candidate: VERSION
  dependencies:
    graql: [build, release]
    common: [build, release]
    dependencies: [build]
    protocol: [build, release]
    behaviour: [build]
    grabl-tracing: [build, release]

build:
  quality:
    filter:
      owner: graknlabs
      branch: master
    build-analysis:
      image: graknlabs-ubuntu-20.04
      command: |
        SONARCLOUD_CODE_ANALYSIS_CREDENTIAL=$SONARCLOUD_CREDENTIAL \
          bazel run @graknlabs_dependencies//tool/sonarcloud:code-analysis -- \
          --project-key=graknlabs_client_java \
          --branch=$GRABL_BRANCH --commit-id=$GRABL_COMMIT
    dependency-analysis:
      image: graknlabs-ubuntu-20.04
      command: |
        bazel run @graknlabs_dependencies//grabl/analysis:dependency-analysis
  correctness:
    build:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel build //...
        bazel run @graknlabs_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)') --test_output=errors
    build-dependency:
      image: graknlabs-ubuntu-20.04
      command: |
        dependencies/maven/update.sh
        git diff --exit-code dependencies/maven/artifacts.snapshot
        bazel run @graknlabs_dependencies//tool/unuseddeps:unused-deps -- list
    test-integration:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/integration/... --test_output=errors
    test-behaviour-connection:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/connection/... --test_output=errors --jobs=1
    # TODO: delete --jobs=1 if we fix the issue with excess memory usage
    test-behaviour-concept:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/concept/... --test_output=errors
    test-behaviour-match:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/graql/language/match/... --test_output=errors
        bazel test //test/behaviour/graql/language/get/... --test_output=errors
    test-behaviour-writable:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/graql/language/insert/... --test_output=errors
        bazel test //test/behaviour/graql/language/delete/... --test_output=errors
        bazel test //test/behaviour/graql/language/update/... --test_output=errors
    test-behaviour-definable:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/graql/language/define/... --test_output=errors
        bazel test //test/behaviour/graql/language/undefine/... --test_output=errors
    deploy-maven-snapshot:
      image: graknlabs-ubuntu-20.04
      dependencies: [build, build-dependency, test-behaviour-connection, test-behaviour-concept, test-behaviour-match] # , test-behaviour-writable, test-behaviour-definable
      filter:
        owner: graknlabs
        branch: master
      command: |
        export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-maven -- snapshot
    test-deployment-maven:
      image: graknlabs-ubuntu-20.04
      dependencies: [deploy-maven-snapshot]
      filter:
        owner: graknlabs
        branch: master
      command: |
        bazel run //test:grakn-extractor-linux -- dist/grakn-core-all-linux
        ./dist/grakn-core-all-linux/grakn server &
        sed -i -e "s/CLIENT_JAVA_VERSION_MARKER/$GRABL_COMMIT/g" test/deployment/pom.xml
        cat test/deployment/pom.xml
        cd test/deployment && mvn test

release:
  filter:
    owner: graknlabs
    branch: master
  validation:
    validate-dependencies:
      image: graknlabs-ubuntu-20.04
      command: bazel test //:release-validate-deps --test_output=streamed
  deployment:
    deploy-github:
      image: graknlabs-ubuntu-20.04
      command: |
        pyenv install -s 3.6.10
        pyenv global 3.6.10 system
        pip3 install certifi
        export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @graknlabs_dependencies//tool/release:create-notes -- client-java $(cat VERSION) ./RELEASE_TEMPLATE.md
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy-github -- $GRABL_COMMIT
    deploy-maven-release:
      image: graknlabs-ubuntu-20.04
      dependencies: [deploy-github]
      command: |
        export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(cat VERSION) //:deploy-maven -- release
