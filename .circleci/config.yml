#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

version: 2.1
commands:
  bazel-install:
    steps:
      - run: |
          mkdir install
          cd install
          curl -OL https://raw.githubusercontent.com/lolski/build-tools/refactor/tools/bazelinstall/linux.sh
          bash ./linux.sh
          curl -OL https://raw.githubusercontent.com/lolski/build-tools/refactor/tools/bazelinstall/rbe.sh
          bash ./rbe.sh
          cd ..
          rm -rf install

  bazel-run-rbe:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_dependencies//tools/bazelrun:rbe -- << parameters.command >>

jobs:
  build:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel build //...
      - run: bazel run @graknlabs_dependencies//unused_deps -- list

  build-checkstyle:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - run: bazel run @graknlabs_dependencies//tools/checkstyle:test-coverage
      - bazel-run-rbe:
          command: bazel test $(bazel query 'kind(checkstyle_test, //...)')

  test-integration-concept:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/integration/concept:concept-it --test_output=errors

  test-integration-answer:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/integration/answer:answer-it --test_output=errors

  test-integration-tracing:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/integration/tracing:tracing-it --test_output=errors

  test-behaviour-connection:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/behaviour/connection/keyspace:test-core --test_output=errors
      - bazel-run-rbe:
          command: bazel test //test/behaviour/connection/session:test-core --test_output=errors
      - bazel-run-rbe:
          command: bazel test //test/behaviour/connection/transaction:test-core --test_output=errors

  test-behaviour-graql-define:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/behaviour/graql/language/define:test-core --test_output=errors

  test-behaviour-graql-delete:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/behaviour/graql/language/delete:test-core --test_output=errors

  test-behaviour-graql-get:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/behaviour/graql/language/get:test-core --test_output=errors

  test-behaviour-graql-insert:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/behaviour/graql/language/insert:test-core --test_output=errors

  test-behaviour-graql-match:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/behaviour/graql/language/match:test-core --test_output=errors

  test-behaviour-graql-undefine:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/behaviour/graql/language/undefine:test-core --test_output=errors

  test-behaviour-graql-reasoner:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/behaviour/graql/reasoner/explanation:test-core --test_output=errors

  deploy-maven-snapshot:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - checkout
      - bazel-install
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //:deploy-maven -- snapshot

  test-assembly-query:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - bazel-run-rbe:
          command: bazel test //test/assembly:test-assembly-query --test_output=errors

  test-deployment-maven:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - checkout
      - bazel-install
      - run-grakn-server
      - run: sed -i -e "s/CLIENT_JAVA_VERSION_MARKER/$CIRCLE_SHA1/g" test/deployment/pom.xml
      - run: cat test/deployment/pom.xml
      - run: cd test/deployment && mvn test

  sync-dependencies-snapshot:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//ci:sync-dependencies -- \
          --source client-java@$CIRCLE_SHA1 \
          --targets console:master grakn-kgms:master

  release-approval:
    machine: 
      image: ubuntu-1604:201903-01
    steps:
      - bazel-install
      - checkout
      - run: |
          export RELEASE_APPROVAL_USERNAME=$REPO_GITHUB_USERNAME
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//ci:release-approval

  release-validate:
    machine: 
      image: ubuntu-1604:201903-01
    steps:
      - bazel-install
      - checkout
      - run: |
          bazel run @graknlabs_dependencies//ci:release-validate-deps -- \
          graknlabs_common graknlabs_graql graknlabs_protocol graknlabs_grabl_tracing

  deploy-github:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - run: |
          pip install certifi
          export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//ci:release-notes -- client-java $(cat VERSION) ./RELEASE_TEMPLATE.md
      - run: |
          export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
          bazel run --define version=$(cat VERSION) //:deploy-github -- $CIRCLE_SHA1

  deploy-maven-release:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(cat VERSION) //:deploy-maven -- release

  sync-dependencies-release:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-java
    steps:
      - bazel-install
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//ci:sync-dependencies -- \
          --source client-java@$(cat VERSION) \
          --targets console:master grakn-kgms:master docs:master examples:master

  release-cleanup:
    machine: 
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: git push --delete https://$REPO_GITHUB_TOKEN@github.com/graknlabs/client-java $CIRCLE_BRANCH

workflows:
  client-java:
    jobs:
      - build:
          filters:
            branches:
              ignore: client-java-release-branch
      - build-checkstyle:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-integration-concept:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-integration-answer:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-integration-tracing:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-behaviour-connection:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-behaviour-graql-define:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-behaviour-graql-delete:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-behaviour-graql-get:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-behaviour-graql-insert:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-behaviour-graql-match:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-behaviour-graql-undefine:
          filters:
            branches:
              ignore: client-java-release-branch
#      - test-behaviour-graql-reasoner:
#          filters:
#            branches:
#              ignore: client-java-release-branch
      - test-assembly-query:
          filters:
            branches:
              ignore: client-java-release-branch
      - deploy-maven-snapshot:
          filters:
            branches:
              only: master
          requires:
            - build
            - build-checkstyle
            - test-assembly-query
            - test-integration-concept
            - test-integration-answer
            - test-integration-tracing
            - test-behaviour-connection
            - test-behaviour-graql-define
            - test-behaviour-graql-delete
            - test-behaviour-graql-get
            - test-behaviour-graql-insert
            - test-behaviour-graql-match
            - test-behaviour-graql-undefine
#            - test-behaviour-graql-reasoner
      - test-deployment-maven:
          filters:
            branches:
              only: master
          requires:
            - deploy-maven-snapshot
      - sync-dependencies-snapshot:
          filters:
            branches:
              only: master
          requires:
            - test-deployment-maven
      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - sync-dependencies-snapshot
  client-java-release:
    jobs:
      - release-validate:
          filters:
            branches:
              only: client-java-release-branch
      - deploy-github:
          filters:
            branches:
              only: client-java-release-branch
          requires:
            - release-validate
      - deploy-approval:
          type: approval
          requires:
            - deploy-github
      - deploy-maven-release:
          filters:
            branches:
              only: client-java-release-branch
          requires:
            - deploy-approval
      - sync-dependencies-release:
          filters:
            branches:
              only: client-java-release-branch
          requires:
            - deploy-maven-release
      - release-cleanup:
          filters:
            branches:
              only: client-java-release-branch
          requires:
            - sync-dependencies-release
