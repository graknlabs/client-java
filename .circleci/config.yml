#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

version: 2.1
commands:
  install-bazel-linux-rbe:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-linux.sh
      - run: bash ./install-bazel-linux.sh && rm ./install-bazel-linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-rbe.sh
      - run: bash ./install-bazel-rbe.sh && rm ./install-bazel-rbe.sh

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_build_tools//ci:run-bazel-rbe -- << parameters.command >>

  run-grakn-server:
    steps:
      - run-bazel-rbe:
          command: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start

jobs:
  build:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel build //...
      - run: bazel run @graknlabs_build_tools//unused_deps -- list

  build-checkstyle:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel run @graknlabs_build_tools//checkstyle:test-coverage
      - run-bazel-rbe:
          command: bazel test $(bazel query 'kind(checkstyle_test, //...)')

  test-concept:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //test/integration/concept:concept-it --test_output=errors

  test-answer:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //test/integration/answer:answer-it --test_output=errors

  test-keyspace:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //test/behaviour/connection/keyspace:test-core --test_output=errors

  test-session:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //test/behaviour/connection/session:test-core --test_output=errors

  test-transaction:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //test/behaviour/connection/transaction:test-core --test_output=errors

  test-graql-define:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //test/behaviour/graql/language/define:test-core --test_output=errors

  test-graql-insert:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //test/behaviour/graql/language/insert:test-core --test_output=errors


  deploy-maven-snapshot:
    machine: true
    working_directory: ~/client-java
    steps:
      - checkout
      - install-bazel-linux-rbe
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //:deploy-maven -- snapshot

  test-deployment-maven:
    machine: true
    working_directory: ~/client-java
    steps:
      - checkout
      - install-bazel-linux-rbe
      - run-grakn-server
      - run: sed -i -e "s/CLIENT_JAVA_VERSION_MARKER/$CIRCLE_SHA1/g" test/deployment/pom.xml
      - run: cat test/deployment/pom.xml
      - run: cd test/deployment && mvn test

  sync-dependencies-snapshot:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:sync-dependencies -- \
          --source client-java@$CIRCLE_SHA1 \
          --targets console:master grakn-kgms:master benchmark:master

  release-approval:
    machine: true
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export RELEASE_APPROVAL_USERNAME=$REPO_GITHUB_USERNAME
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:release-approval

  release-validate:
    machine: true
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          bazel run @graknlabs_build_tools//ci:release-validate-deps -- graknlabs_protocol

  deploy-github:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          pip install certifi
          export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:release-notes -- client-java $(cat VERSION) ./RELEASE_TEMPLATE.md
      - run: |
          export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
          bazel run --define version=$(cat VERSION) //:deploy-github -- $CIRCLE_SHA1

  deploy-maven-release:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(cat VERSION) //:deploy-maven -- release

  sync-dependencies-release:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:sync-dependencies -- \
          --source client-java@$(cat VERSION) \
          --targets console:master grakn-kgms:master benchmark:master docs:master examples:master

  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: git push --delete https://$REPO_GITHUB_TOKEN@github.com/graknlabs/client-java $CIRCLE_BRANCH

workflows:
  client-java:
    jobs:
      - build:
          filters:
            branches:
              ignore: client-java-release-branch
      - build-checkstyle:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-concept:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-answer:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-keyspace:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-session:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-transaction:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-graql-define:
          filters:
            branches:
              ignore: client-java-release-branch
      - test-graql-insert:
          filters:
            branches:
              ignore: client-java-release-branch
      - deploy-maven-snapshot:
          filters:
            branches:
              only: master
          requires:
            - build
            - build-checkstyle
            - test-concept
            - test-answer
            - test-keyspace
            - test-session
            - test-transaction
      - test-deployment-maven:
          filters:
            branches:
              only: master
          requires:
            - deploy-maven-snapshot
      - sync-dependencies-snapshot:
          filters:
            branches:
              only: master
          requires:
            - test-deployment-maven
      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - sync-dependencies-snapshot
  client-java-release:
    jobs:
      - release-validate:
          filters:
            branches:
              only: client-java-release-branch
      - deploy-github:
          filters:
            branches:
              only: client-java-release-branch
          requires:
            - release-validate
      - deploy-approval:
          type: approval
          requires:
            - deploy-github
      - deploy-maven-release:
          filters:
            branches:
              only: client-java-release-branch
          requires:
            - deploy-approval
      - sync-dependencies-release:
          filters:
            branches:
              only: client-java-release-branch
          requires:
            - deploy-maven-release
      - release-cleanup:
          filters:
            branches:
              only: client-java-release-branch
          requires:
            - sync-dependencies-release
