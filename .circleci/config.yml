#
# GRAKN.AI - THE KNOWLEDGE GRAPH
# Copyright (C) 2018 Grakn Labs Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
commands:
  install-bazel-linux-rbe:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-linux.sh
      - run: bash ./install-bazel-linux.sh && rm ./install-bazel-linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-rbe.sh
      - run: bash ./install-bazel-rbe.sh && rm ./install-bazel-rbe.sh

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_build_tools//ci:run-bazel-rbe -- << parameters.command >>

jobs:
  build:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel run @graknlabs_build_tools//checkstyle:test-coverage
      - run-bazel-rbe:
          command: bazel build //...

  test:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //... --test_size_filters=small --test_output=errors
      - run-bazel-rbe:
          command: bazel test //... --test_size_filters=medium,large,enormous --test_output=errors

  test-deployment:
    machine: true
    working_directory: ~/client-java
    steps:
      - checkout
      - install-bazel
      - run: echo client-java-test-deployment-$(cat VERSION)-$(date +%s) > VERSION
      - run: cat VERSION
      - run: mkdir deployment-dependencies
      - run:
          command: |
            git clone https://github.com/graknlabs/graql.git deployment-dependencies/graql # TODO: switch to the appropriate commit id
            cp ~/client-java/VERSION deployment-dependencies/graql/VERSION
      - run:
          command: |
            cd deployment-dependencies/graql
            bazel run //java:deploy-maven -- snapshot $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
      - run:
          command: |
            git clone https://github.com/graknlabs/grakn.git deployment-dependencies/grakn # TODO: switch to the appropriate commit id
            cp ~/client-java/VERSION deployment-dependencies/grakn/VERSION
      - run:
          command: |
            cd deployment-dependencies/grakn
            bazel run //api:deploy-maven -- snapshot $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
            bazel run //protocol:deploy-maven -- snapshot $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
            bazel run //common:deploy-maven -- snapshot $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
            bazel run //concept:deploy-maven -- snapshot $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
      - run: bazel run //:deploy-maven -- snapshot $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
      - run:
          name: Run test-deployment
          command: |
            sed -i -e "s/VERSION_MARKER/$(cat VERSION)/g" test/deployment/pom.xml
            cd test/deployment
            mvn test

  sync-dependencies:
    machine: true
    working_directory: ~/client-java
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          bazel run @graknlabs_build_tools//ci:sync-dependencies -- \
          --source client-java@$CIRCLE_SHA1 \
          --targets docs:development examples:development

workflows:
  client-java:
    jobs:
# TODO: uncomment before merging to master
#      - build
#      - test
      - test-deployment
#      - sync-dependencies:
#          filters:
#            branches:
#              only: master
#          requires:
#            - build
#            - test
